# Generated by Django 2.2.2 on 2020-11-29 17:39

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('department', '0001_initial'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailVerifyCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='邮箱验证码')),
                ('email', models.EmailField(max_length=200, verbose_name='验证码邮箱')),
                ('send_type', models.IntegerField(choices=[(1, 'register'), (2, 'forget'), (3, 'change')], verbose_name='验证码类型')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '邮箱验证码信息',
                'verbose_name_plural': '邮箱验证码信息',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', models.ImageField(blank=True, max_length=200, null=True, upload_to='student/', verbose_name='学生照片')),
                ('xm', models.CharField(blank=True, max_length=20, null=True, verbose_name='姓名')),
                ('xh', models.CharField(blank=True, max_length=10, null=True, verbose_name='学号')),
                ('gender', models.CharField(choices=[('girl', '女'), ('boy', '男')], default='boy', max_length=10, verbose_name='性别')),
                ('cardid', models.CharField(blank=True, max_length=18, null=True, verbose_name='身份证号')),
                ('nation', models.CharField(blank=True, max_length=10, null=True, verbose_name='民族')),
                ('politics_status', models.CharField(blank=True, choices=[('qz', '群众'), ('gqt', '共青团员'), ('gcd', '共产党员')], default='qz', max_length=10, null=True, verbose_name='政治面貌')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='家庭住址')),
                ('grade', models.CharField(blank=True, max_length=8, null=True, verbose_name='年级')),
                ('xuezhi', models.IntegerField(choices=[(2, '2年'), (3, '3年'), (4, '4年'), (5, '5年')], default=4, verbose_name='学制')),
                ('time', models.DateField(blank=True, null=True, verbose_name='入学时间')),
                ('category', models.CharField(blank=True, max_length=20, null=True, verbose_name='学生类别')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('student_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='department.ClassInfo', verbose_name='所属班级')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '学生信息',
                'verbose_name_plural': '学生信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
